# RangeEngine Configuration Test - Custom Settings
#
# This config demonstrates custom RangeEngine tuning for specific scenarios.
# Purpose: Show how to optimize RangeEngine for different network/storage characteristics.
#
# Custom settings:
# - Lower threshold (2 MB instead of 4 MB) - activate for smaller files
# - Smaller chunks (32 MB instead of 64 MB) - more granular parallelism
# - Lower concurrency (16 instead of 32) - reduce overhead
# - Longer timeout (60s instead of 30s) - handle slow storage
#
# Use case: Slow network or storage with smaller files
#
# How to use:
# 1. Prepare test data:
#    sai3-bench prepare --config tests/configs/rangeengine_custom.yaml
#
# 2. Run workload:
#    sai3-bench -vv run --config tests/configs/rangeengine_custom.yaml
#
# 3. Compare with enabled/disabled variants

target: "file:///tmp/sai3bench-range-custom/"
duration: "5s"
concurrency: 2

# RangeEngine with CUSTOM settings optimized for slow storage
range_engine:
  enabled: true
  chunk_size: 33554432          # 32 MB chunks (smaller than default)
  max_concurrent_ranges: 16      # Lower concurrency to reduce overhead
  min_split_size: 2097152        # 2 MB threshold (lower than default 4 MB)
  range_timeout_secs: 60         # Longer timeout for slow storage

workload:
  # Tiny files - still sequential (< 2 MB threshold)
  - op: get
    path: "tiny/*"
    weight: 20
  
  # Medium files - RangeEngine activates (>= 2 MB with custom threshold)
  - op: get
    path: "medium/*"
    weight: 40
  
  # Large files - RangeEngine with multiple chunks
  - op: get
    path: "large/*"
    weight: 20
  
  # PUT operations
  - op: put
    path: "tiny/"
    weight: 7
    object_size: 1048576  # 1 MB (below threshold)
  
  - op: put
    path: "medium/"
    weight: 7
    object_size: 4194304  # 4 MB (above custom threshold)
  
  - op: put
    path: "large/"
    weight: 6
    object_size: 67108864  # 64 MB (2 chunks with custom settings)
